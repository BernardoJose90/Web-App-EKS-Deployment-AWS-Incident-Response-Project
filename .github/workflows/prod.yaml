name: "Prod Terraform + EKS CI"

on:
  push:
    branches:
      - "main"

permissions:
  id-token: write
  contents: read

jobs:
  apply:
    runs-on: ubuntu-latest
    environment: "production"

    steps:
      # 1️⃣ Checkout the code
      - name: "Checkout code"
        uses: actions/checkout@v4

      # 2️⃣ Configure AWS credentials via OIDC
      - name: "Configure AWS credentials using OIDC"
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: "arn:aws:iam::851725622142:role/GitHubActionsRole"
          aws-region: "eu-west-2"
          role-session-name: "github-actions-${{ github.sha }}"
          audience: "sts.amazonaws.com"

      # 3️⃣ Install jq for Secrets Manager
      - name: "Install jq"
        run: sudo apt-get install -y jq

      # 4️⃣ Fetch KMS Key ARN from Secrets Manager
      - name: "Get KMS Key ARN from Secrets Manager"
        id: get_kms
        run: |
          kms_key_arn=$(aws secretsmanager get-secret-value \
            --secret-id "prod/kms-key" \
            --query SecretString \
            --output text | jq -r '.KMS_KEY_ARN')
          echo "KMS_KEY_ARN=$kms_key_arn" >> $GITHUB_ENV
          kms_key_id=$(echo "$kms_key_arn" | cut -d'/' -f2)
          echo "KMS_KEY_ID=$kms_key_id" >> $GITHUB_ENV

      # 5️⃣ Setup Terraform
      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      # 6️⃣ Terraform Init with production backend config
      - name: "Terraform Init"
        working-directory: environments/prod
        run: |
          echo "Current directory: $(pwd)"
          echo "Terraform files:"
          ls -la *.tf
          terraform init \
            -backend-config="bucket=cloudsec-project-tfstate" \
            -backend-config="key=prod/terraform.tfstate" \
            -backend-config="region=eu-west-2"

      - name: "Terraform Plan"
        working-directory: environments/prod
        run: |
          echo "Running Terraform plan from: $(pwd)"
          terraform plan -var-file="prod.tfvars" -out=tfplan

      - name: "Terraform Apply"
        working-directory: environments/prod
        run: terraform apply -auto-approve tfplan

      # 7️⃣ Debug: List created resources.
      - name: "Debug: List Terraform resources"
        working-directory: environments/prod
        run: |
          echo "=== Terraform State List ==="
          terraform state list || echo "No resources in state yet"
          
          echo "=== AWS EKS Clusters ==="
          aws eks list-clusters --region eu-west-2 || echo "EKS command failed - may not have clusters yet"
